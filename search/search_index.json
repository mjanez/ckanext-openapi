{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ckanext-openapi. CKAN instance OpenAPI endpoints.","text":"<p><code>ckanext-openapi</code> is an extension for CKAN that integrates and displays OpenAPI endpoints directly in the CKAN catalog. Supporting both OpenAPI 2.0.0 and OpenAPI 3.0.0 specifications.</p> <p>Tip</p> <p>It is recommended to use with: <code>ckan-docker</code> deployment and <code>ckanext-schemingdcat</code></p> <p>Warning</p> <p>This project requires ckan/ckanext-scheming to work properly.</p> <p> </p> <p>Enhancements:</p> <ul> <li>Add custom OpenAPI endpoints directly in the CKAN deployment.</li> <li>Use <code>YAML</code> or <code>JSON</code> OpenAPI files from URLs or relative static content.</li> </ul>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#unreleased","title":"Unreleased","text":"<p>Compare with latest</p>"},{"location":"changelog/#v100-2024-10-25","title":"v1.0.0 - 2024-10-25","text":"<p>Compare with first commit</p>"},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Add codecov to actions (e87c3f9 by mjanez).</li> <li>Add newline for improved readability in mkdocs workflow file (a52dd81 by mjanez).</li> <li>Add GitHub Actions workflow for MkDocs deployment and create changelog (6ebf9c8 by mjanez).</li> <li>Add mkdocs documentation and configuration files for ckanext-openapi (25806f7 by mjanez).</li> <li>Add tests for OpenAPI helpers, views and plugin configuration (c345a70 by mjanez).</li> <li>Add translation to plugin and fix assets resource path (19b537e by mjanez).</li> <li>Add testing dependencies for improved coverage and mocking (cc91691 by mjanez).</li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Fix render paths in OpenAPI views for index and endpoint templates (910206e by mjanez).</li> </ul>"},{"location":"changelog/#removed","title":"Removed","text":"<ul> <li>Remove deprecated CKAN version 2.9 from GitHub Actions test workflow (2ac8132 by mjanez).</li> </ul>"},{"location":"tools/","title":"Configuration Documentation Generation","text":"<p>This script converts the <code>config_declaration.yml</code> file into structured Markdown documentation, similar to the documentation generated by <code>ckanext-dcat</code>. The generated Markdown file provides a clear and organized overview of your configuration settings.</p>"},{"location":"tools/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.x installed on your machine.</li> <li>Git (optional, for cloning the repository).</li> </ul>"},{"location":"tools/#setup-instructions","title":"Setup Instructions","text":"<p>Follow the steps below to set up a virtual environment, install the necessary dependencies, and run the script on both Windows and Linux systems.</p>"},{"location":"tools/#1-clone-the-repository-optional","title":"1. Clone the Repository (Optional)","text":"<p>If you haven't already, clone your repository to your local machine:</p> <pre><code>git clone https://github.com/your-username/your-repository.git\ncd your-repository\n</code></pre> <p>Replace <code>https://github.com/your-username/your-repository.git</code> with your repository's actual URL.</p>"},{"location":"tools/#2-navigate-to-the-script-directory","title":"2. Navigate to the Script Directory","text":"<p>Navigate to the directory containing the </p> <p>config_declaration_to_md.py</p> <p>script:</p> <pre><code>cd ckanext/openapi/docs/tools\n</code></pre>"},{"location":"tools/#3-create-a-virtual-environment","title":"3. Create a Virtual Environment","text":"<p>Creating a virtual environment ensures that your project dependencies are isolated from other projects.</p>"},{"location":"tools/#on-linuxmacos","title":"On Linux/macOS:","text":"<pre><code>python3 -m venv venv\n</code></pre>"},{"location":"tools/#on-windows","title":"On Windows:","text":"<pre><code>python -m venv venv\n</code></pre>"},{"location":"tools/#4-activate-the-virtual-environment","title":"4. Activate the Virtual Environment","text":"<p>Activate the virtual environment to start using it.</p>"},{"location":"tools/#on-linuxmacos_1","title":"On Linux/macOS:","text":"<pre><code>source venv/bin/activate\n</code></pre>"},{"location":"tools/#on-windows-command-prompt","title":"On Windows (Command Prompt):","text":"<pre><code>venv\\Scripts\\activate\n</code></pre>"},{"location":"tools/#on-windows-powershell","title":"On Windows (PowerShell):","text":"<pre><code>.\\venv\\Scripts\\Activate.ps1\n</code></pre> <p>If you encounter an execution policy error on PowerShell, you can temporarily allow script execution:</p> <pre><code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process\n</code></pre>"},{"location":"tools/#5-install-dependencies","title":"5. Install Dependencies","text":"<p>Install the required Python libraries using <code>pip</code>.</p>"},{"location":"tools/#option-1-using-requirementstxt","title":"Option 1: Using requirements.txt","text":"<p>If a <code>requirements.txt</code> file is provided, run:</p> <pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"tools/#option-2-manual-installation","title":"Option 2: Manual Installation","text":"<p>If there's no <code>requirements.txt</code>, install the necessary packages manually:</p> <pre><code>pip install pyyaml jinja2\n</code></pre>"},{"location":"tools/#6-run-the-script","title":"6. Run the Script","text":"<p>Execute the Python script to generate the Markdown documentation.</p> <pre><code>python config_declaration_to_md.py\n</code></pre>"},{"location":"tools/#7-locate-the-generated-documentation","title":"7. Locate the Generated Documentation","text":"<p>After running the script, an <code>output</code> directory will be created in the same location as the script. Inside this folder, you'll find the <code>configuration.md</code> file containing your configuration documentation.</p> <pre><code>ckanext/openapi/docs/tools/\n\u2502\n\u251c\u2500\u2500 config_declaration_to_md.py\n\u2514\u2500\u2500 output/\n    \u2514\u2500\u2500 configuration.md\n</code></pre>"},{"location":"tools/output/configuration/","title":"Configuration","text":""},{"location":"tools/output/configuration/#general-settings","title":"General settings","text":""},{"location":"tools/output/configuration/#ckanextopenapiendpoints","title":"ckanext.openapi.endpoints","text":"<p>List of OpenAPI endpoints. Each endpoint should be a dictionary with the following keys: - url, str: URL or relative path of the OpenAPI file, accepted formats are JSON and YAML, e.g. <code>https://raw.githubusercontent.com/OAI/OpenAPI-Specification/refs/heads/main/examples/v3.0/petstore.json</code> or <code>/static/openapi/sample.yaml</code>. - name, str: Path of the OpenAPI in CKAN Open Data portal, e.g. <code>ckan</code>. - title, dict: Title for the endpoint in different languages, e.g. <code>{'en': 'CKAN OpenAPI'}</code>. - description, dict: Description for the endpoint in different languages, e.g. <code>{'en': 'CKAN OpenAPI description'}</code>.</p>"},{"location":"v1/configuration/","title":"Configuration reference","text":""},{"location":"v1/configuration/#general-settings","title":"General settings","text":""},{"location":"v1/configuration/#ckanextopenapiendpoints","title":"ckanext.openapi.endpoints","text":"<p>List of OpenAPI endpoints. Each endpoint should be a dictionary with the following keys:</p> <ul> <li><code>url</code>, str: URL or relative path of the OpenAPI file, accepted formats are JSON and YAML, e.g. <code>https://raw.githubusercontent.com/mjanez/ckanext-openapi/refs/heads/develop/ckanext/openapi/public/static/openapi/ckan.yaml</code> or <code>/static/openapi/sample.json</code></li> <li><code>name</code>, str: Path of the OpenAPI in CKAN Open Data portal, e.g. <code>ckan</code></li> <li><code>title</code>, dict: Title for the endpoint in different languages, e.g. <code>{'en': 'CKAN OpenAPI', 'es': 'Punto final OpenAPI de CKAN'}</code></li> <li><code>description</code>, dict: Description for the endpoint in different languages, e.g. <code>{'en': 'CKAN OpenAPI description.', 'es': 'Descripci\u00f3n de OpenAPI CKAN.'}</code> JSON List example: <code>[{\"url\":\"https://raw.githubusercontent.com/mjanez/ckanext-openapi/refs/heads/develop/ckanext/openapi/public/static/openapi/ckan.yaml\",\"name\":\"ckan\",\"title\":{\"en\":\"CKAN OpenAPI\",\"es\":\"Punto final OpenAPI de CKAN\"},\"description\":{\"en\":\"CKAN OpenAPI description.\",\"es\":\"Descripci\u00f3n de OpenAPI CKAN.\"}}]</code></li> </ul>"},{"location":"v1/dev-changelog/","title":"Update ChangeLog","text":""},{"location":"v1/dev-changelog/#git-changelog","title":"Git Changelog","text":"<p>Create a <code>CHANGELOG.md</code> file from a git repo:</p> <pre><code>pip install git-changelog\n\n# In repo, output the file.\ngit-changelog --output CHANGELOG.md --provider github\n</code></pre>"},{"location":"v1/dev-mkdocs/","title":"Plugin docs with MKDocs","text":""},{"location":"v1/dev-mkdocs/#using-mkdocs","title":"Using MkDocs","text":"<p>This <code>README.md</code> provides basic instructions for setting up and using MkDocs to generate documentation.</p>"},{"location":"v1/dev-mkdocs/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.6 or higher</li> <li>pip (Python package manager)</li> </ul>"},{"location":"v1/dev-mkdocs/#installation","title":"Installation","text":"<p>Clone the repository:</p> <pre><code>git clone https://github.com/your-username/your-repository.git\ncd your-repository\n</code></pre> <p>Create and activate a virtual environment:</p> <p>On Linux/macOS:</p> <pre><code>python3 -m venv venv\nsource venv/bin/activate\n</code></pre> <p>On Windows:</p> <pre><code>python -m venv venv\nvenv\\Scripts\\activate\n</code></pre> <p>Install MkDocs and the Material theme:</p> <pre><code>pip install mkdocs mkdocs-material pymdown-extensions\n</code></pre>"},{"location":"v1/dev-mkdocs/#project-structure","title":"Project Structure","text":"<p>Ensure your project has the following structure:</p> <pre><code>your-repository/\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 index.md\n\u2502   \u251c\u2500\u2500 ... (other Markdown files)\n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 README.md\n</code></pre> <ul> <li>docs/: Folder containing the Markdown files for the documentation.</li> <li>mkdocs.yml: MkDocs configuration file.</li> <li>README.md: This file.</li> </ul>"},{"location":"v1/dev-mkdocs/#mkdocs-configuration","title":"MkDocs Configuration","text":"<p>Example <code>mkdocs.yml</code> file:</p> <pre><code>site_name: \"Site Name\"\ntheme:\n  name: \"material\"\n\nnav:\n  - Home: index.md\n  - Page 1: page1.md\n  - Page 2: page2.md\n\nmarkdown_extensions:\n  - toc:\n      permalink: true\n  - admonition\n  - pymdownx.highlight\n  - pymdownx.inlinehilite\n  - pymdownx.superfences\n  - pymdownx.tabbed\n  - pymdownx.snippets\n</code></pre>"},{"location":"v1/dev-mkdocs/#generate-and-serve-documentation","title":"Generate and Serve Documentation","text":"<ol> <li>Navigate to the project directory:</li> </ol> <pre><code>cd your-repository\n</code></pre> <ol> <li>Start the development server:</li> </ol> <pre><code>mkdocs serve -a 127.0.0.1:8088\n</code></pre> <ol> <li>Open your browser and navigate to:</li> </ol> <pre><code>http://127.0.0.1:8088\n</code></pre>"},{"location":"v1/dev-mkdocs/#build-documentation-for-production","title":"Build Documentation for Production","text":"<p>To generate the static files for the documentation:</p> <pre><code>mkdocs build\n</code></pre> <p>The generated files will be located in the <code>site/</code> folder.</p>"},{"location":"v1/dev-mkdocs/#debug-mkdocs","title":"Debug MkDocs","text":"<p>To debug MkDocs, follow these steps:</p> <pre><code>cd ckanext-openapi\nmkdocs serve -a 127.0.0.1:8088\n</code></pre>"},{"location":"v1/dev-mkdocs/#additional-resources","title":"Additional Resources","text":"<ul> <li>MkDocs Official Documentation</li> <li>Material for MkDocs</li> </ul>"},{"location":"v1/dev-translations/","title":"Translations","text":""},{"location":"v1/dev-translations/#development","title":"Development","text":""},{"location":"v1/dev-translations/#update-internationalization-i18n-files","title":"Update Internationalization (i18n) Files","text":"<p>To compile a <code>.po</code> file to a <code>.mo</code> file in the terminal, you can use the <code>msgfmt</code> tool, which is part of the <code>gettext</code> package. Here are the steps to do it:</p>"},{"location":"v1/dev-translations/#steps-to-compile-po-file-to-mo-file","title":"Steps to Compile <code>.po</code> File to <code>.mo</code> File.","text":"<ol> <li>Install <code>gettext</code> (if not already installed):</li> <li>On most Linux distributions, you can install <code>gettext</code> using your system's package manager. For example, in Debian/Ubuntu:</li> </ol> <pre><code>sudo apt-get install gettext\n</code></pre> <p>In Fedora:</p> <p><code>`sh    sudo dnf install gettext</code></p> <ol> <li>Compile the <code>.po</code> file to <code>.mo</code>:</li> <li>Use the <code>msgfmt</code> command to compile the <code>.po</code> file to <code>.mo</code>. Make sure you are in the directory where your <code>.po</code> file is located or provide the full path to the file.</li> </ol> <pre><code>msgfmt -o ckanext-openapi.mo ckanext-openapi.po\n</code></pre> <ul> <li>This command will generate a <code>ckanext-openapi.mo</code> file in the same directory as the <code>.po</code> file.</li> </ul>"},{"location":"v1/dev-translations/#complete-example","title":"Complete Example","text":"<p>Let's assume your <code>.po</code> file is located in the <code>i18n/en/LC_MESSAGES/</code> directory inside your project. Here are the complete commands:</p> <ol> <li> <ol> <li>Navigate to the Project Directory:</li> </ol> </li> </ol> <pre><code>cd /path/to/your/project\n</code></pre> <ol> <li>Navigate to the Directory Containing the <code>.po</code> File:</li> </ol> <pre><code>cd i18n/en/LC_MESSAGES/\n</code></pre> <ol> <li>Compile the <code>.po</code> file to <code>.mo</code>:</li> </ol> <pre><code>msgfmt -o ckanext-openapi.mo ckanext-openapi.po\n</code></pre>"},{"location":"v1/dev-translations/#verification","title":"Verification","text":"<ol> <li>Verify that the <code>.mo</code> file has been generated in the browser.</li> </ol>"},{"location":"v1/getting-started/","title":"Getting started","text":""},{"location":"v1/getting-started/#requirements","title":"Requirements","text":""},{"location":"v1/getting-started/#compatibility","title":"Compatibility","text":"<p>Compatibility with core CKAN versions:</p> CKAN version Compatible? 2.8 \u274c No (&gt;= Python 3) 2.9 \u274c No (&gt;= CKAN 2.10) 2.10 \u2705 Yes 2.11 \u2705 Yes"},{"location":"v1/getting-started/#plugins","title":"Plugins","text":"<p>This plugin needs the following plugins to work properly:</p> <pre><code># Install latest stable release of:\n## ckan/ckanext-scheming: https://github.com/ckan/ckanext-scheming/tags (e.g. release-3.0.0)\npip install -e git+https://github.com/ckan/ckanext-scheming.git@release-3.0.0#egg=ckanext-scheming\n</code></pre>"},{"location":"v1/getting-started/#installation","title":"Installation","text":"<p>To install <code>ckanext-openapi</code>:</p> <ol> <li> <p>Activate your CKAN virtual environment, for example:</p> <p>. /usr/lib/ckan/default/bin/activate</p> </li> <li> <p>Clone the source and install it on the virtualenv</p> <p>git clone https://github.com/mjanez/ckanext-openapi.git cd ckanext-openapi pip install -e . pip install -r requirements.txt</p> </li> <li> <p>Clone the source of <code>ckanext-scheming</code> to work properly:</p> <p>git clone https://github.com/ckan/ckanext-scheming.git cd ckanext-scheming pip install -e . pip install -r requirements.txt</p> </li> <li> <p>Add <code>openapi</code> to the <code>ckan.plugins</code> setting in your CKAN    config file (by default the config file is located at    <code>/etc/ckan/default/ckan.ini</code>). And <code>scheming_datasets</code> if not using <code>schemingdcat</code> and <code>schemingdcat_datasets</code> from <code>ckanext-schemingdcat</code> extension.</p> <pre><code># Add the plugin to the list of plugins\nckan.plugins = ... scheming_datasets ... openapi\n</code></pre> </li> <li> <p>Restart CKAN. For example if you've deployed CKAN with Apache on Ubuntu:</p> <p>sudo service apache2 reload</p> </li> </ol>"},{"location":"v1/getting-started/#pip-installation","title":"PIP installation","text":"<pre><code>cd $CKAN_VENV/src/\n\n# Install latest stable release of:\n## ckan/ckanext-scheming: https://github.com/ckan/ckanext-scheming/tags (e.g. release-3.0.0)\npip install -e git+https://github.com/ckan/ckanext-scheming.git@release-3.0.0#egg=ckanext-scheming\n\n# Install the ckanext-openapi plugin\npip install -e \"git+https://github.com/ckan/ckanext-openapi.git#egg=ckanext-openapi\"\n</code></pre>"},{"location":"v1/getting-started/#config-settings","title":"Config settings","text":"<p>Set the endpoints you want to use with configuration options:</p> <pre><code># Each of the plugins is optional depending on your use\nckanext.openapi.endpoints = '[{\"url\":\"/static/openapi/sample.json\",\"name\":\"sample\",\"title\":{\"en\":\"OpenAPI sample 1\",\"es\":\"Ejemplo de OpenAPI 1\"},\"description\":{\"en\":\"API with examples.\",\"es\":\"API con ejemplos.\"}},{\"url\":\"https://raw.githubusercontent.com/OAI/OpenAPI-Specification/refs/heads/main/examples/v3.0/petstore.json\",\"name\":\"petstore\",\"title\":{\"en\":\"Petstore OpenAPI example\",\"es\":\"Ejemplo OpenAPI Petstore\"},\"description\":{\"en\":\"This is a sample Pet Store Server based on the OpenAPI 3.0 specification.\",\"es\":\"Este es un ejemplo de Servidor de Tienda de Mascotas basado en la especificaci\u00f3n OpenAPI 3.0.\"}}]'\n</code></pre> <p>Or using <code>ckanext-ennvars</code>:</p> <pre><code>CKANEXT__OPENAPI__ENDPOINTS='[{\"url\":\"https://raw.githubusercontent.com/mjanez/ckanext-openapi/refs/heads/develop/ckanext/openapi/public/static/openapi/datastore.yaml\",\"name\":\"datastore\",\"title\":{\"en\":\"CKAN - Datastore API\",\"es\":\"Portal de datos abiertos de CKAN - API Datastore\"},\"description\":{\"en\":\"This API provides live access to the Datastore portion of the CKAN Open Data Portal.\",\"es\":\"Esta API proporciona acceso en tiempo real a la parte de Datastore del Portal de Datos Abiertos CKAN.\"}},{\"url\":\"https://raw.githubusercontent.com/mjanez/ckanext-openapi/refs/heads/develop/ckanext/openapi/public/static/openapi/ckan.yaml\",\"name\":\"ckan\",\"title\":{\"en\":\"CKAN Open Data Portal - CKAN API (ES)\",\"es\":\"Portal de datos abiertos de CKAN - API CKAN\"},\"description\":{\"en\":\"This API provides live access to the CKAN portion of the CKAN Open Data Portal.\",\"es\":\"Esta API proporciona acceso en tiempo real a la parte de CKAN del Portal de Datos Abiertos CKAN.\"}}]'\n</code></pre>"},{"location":"v1/tests/","title":"Running the Tests","text":""},{"location":"v1/tests/#running-the-tests","title":"Running the Tests","text":"<p>To run the tests:</p> <pre><code>pytest --ckan-ini=test.ini ckanext/openapi/tests\n</code></pre>"},{"location":"v1/tests/#run-tests-quickly-with-docker-compose","title":"Run tests quickly with Docker Compose","text":"<p>This repository includes a Docker Compose configuration to simplify running tests. The CKAN image is built using the Dockerfile located in the <code>docker/</code> directory.</p> <p>To test against the CKAN version you want to use, proceed as follows</p> <p>Building the images and run the tests:</p> <pre><code>docker compose up --build\n</code></pre>"}]}